{
	"info": {
		"_postman_id": "95d37ec1-3da0-4553-8085-37893ff98c60",
		"name": "t25",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "abarth11-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"81.41\", \"name\": \"NA\", \"longitude\": \"-78.05\"}, {\"latitude\": \"-5.18\", \"name\": \"SA\", \"longitude\": \"-75.23\"}, {\"latitude\": \"61.55\", \"name\": \"EU\", \"longitude\": \"10.55\"}, {\"latitude\": \"65.03\", \"name\": \"AS\", \"longitude\": \"165.94\"}, {\"latitude\": \"-24.12\", \"name\": \"OC\", \"longitude\": \"133.59\"}, {\"latitude\": \"-17.56\", \"name\": \"AF\", \"longitude\": \"23.20\"}, {\"latitude\": \"-75.25\", \"name\": \"AN\", \"longitude\": \"55.51\"}]",
							",earthRadius:3959.0",
							",distances:[5984, 6395, 3600, 6397, 6935, 4160, 11694]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"81.41\", \"name\": \"NA\", \"longitude\": \"-78.05\"}, {\"latitude\": \"-5.18\", \"name\": \"SA\", \"longitude\": \"-75.23\"}, {\"latitude\": \"61.55\", \"name\": \"EU\", \"longitude\": \"10.55\"}, {\"latitude\": \"65.03\", \"name\": \"AS\", \"longitude\": \"165.94\"}, {\"latitude\": \"-24.12\", \"name\": \"OC\", \"longitude\": \"133.59\"}, {\"latitude\": \"-17.56\", \"name\": \"AF\", \"longitude\": \"23.20\"}, {\"latitude\": \"-75.25\", \"name\": \"AN\", \"longitude\": \"55.51\"}], \"earthRadius\": 3959.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "absarah-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {\r",
							"places:[{\"latitude\": \"0\", \"name\": \"Null Island\", \"longitude\": \"0\"}, {\"latitude\": \"31.559\", \"name\": \"Dead Sea\", \"longitude\": \"35.473\"}, {\"latitude\": \"27.002\", \"name\": \"Nile River\", \"longitude\": \"31.344\"}]\r",
							",earthRadius:3548\r",
							",distances:[2852, 360, 2505]\r",
							",requestType:\"distances\"}\r",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0\", \"name\": \"Null Island\", \"longitude\": \"0\"}, {\"latitude\": \"31.559\", \"name\": \"Dead Sea\", \"longitude\": \"35.473\"}, {\"latitude\": \"27.002\", \"name\": \"Nile River\", \"longitude\": \"31.344\"}], \"earthRadius\": 3548, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "akilbo-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"45\", \"name\": \"A\", \"longitude\": \"90\"}, {\"latitude\": \"50\", \"name\": \"B\", \"longitude\": \"95\"}, {\"latitude\": \"55\", \"name\": \"C\", \"longitude\": \"100\"}]",
							",earthRadius:6371",
							",distances:[671, 651, 1319]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"45\", \"name\": \"A\", \"longitude\": \"90\"}, {\"latitude\": \"50\", \"name\": \"B\", \"longitude\": \"95\"}, {\"latitude\": \"55\", \"name\": \"C\", \"longitude\": \"100\"}], \"earthRadius\": 6371, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "alapwn-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"-40.5747096\", \"longitude\": \"105.130363\"}, {\"latitude\": \"-40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"105.130363\"}]",
							",earthRadius:3959",
							",distances:[0, 0, 0, 10857, 6517, 10857, 6517]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"-40.5747096\", \"longitude\": \"105.130363\"}, {\"latitude\": \"-40.5747096\", \"longitude\": \"-105.130363\"}, {\"latitude\": \"40.5747096\", \"longitude\": \"105.130363\"}], \"earthRadius\": 3959, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "alwarith-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"23.61\", \"name\": \"Muscat, 1858, Oman\", \"longitude\": \"58.33\"}, {\"latitude\": \"43.04\", \"name\": \"Apron II, Aviation Lane, London, Southwestern Ontario, Ontario, N6C 1V2, Canada\", \"longitude\": \"-81.15\"}, {\"latitude\": \"35.55\", \"name\": \"Haneda Kukou, Ota, Tokyo, 144-0000, Japan\", \"longitude\": \"139.78\"}]",
							",earthRadius:6371.0",
							",distances:[11524, 10342, 7772]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"23.61\", \"name\": \"Muscat, 1858, Oman\", \"longitude\": \"58.33\"}, {\"latitude\": \"43.04\", \"name\": \"Apron II, Aviation Lane, London, Southwestern Ontario, Ontario, N6C 1V2, Canada\", \"longitude\": \"-81.15\"}, {\"latitude\": \"35.55\", \"name\": \"Haneda Kukou, Ota, Tokyo, 144-0000, Japan\", \"longitude\": \"139.78\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "anupkh-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"37.31999969482422\", \"longitude\": \"-93.4198989868164\", \"name\": \"Bird Field\"}, {\"latitude\": \"34.90039825439453\", \"longitude\": \"-84.77850341796875\", \"name\": \"Blue Bird Field\"}, {\"latitude\": \"31.001399993896484\", \"longitude\": \"-88.51699829101562\", \"name\": \"Bird Nest Airport\"}]",
							",earthRadius:6371.0",
							",distances:[821, 556, 835]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"37.31999969482422\", \"longitude\": \"-93.4198989868164\", \"name\": \"Bird Field\"}, {\"latitude\": \"34.90039825439453\", \"longitude\": \"-84.77850341796875\", \"name\": \"Blue Bird Field\"}, {\"latitude\": \"31.001399993896484\", \"longitude\": \"-88.51699829101562\", \"name\": \"Bird Nest Airport\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "bcates-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"28.408999\", \"name\": \"Orlando International Airport\", \"longitude\": \"-81.310293\"}, {\"latitude\": \"35.919653\", \"name\": \"Rockwood Municipal Airport\", \"longitude\": \"-84.690601\"}, {\"latitude\": \"36.119447\", \"name\": \"Nashville International Airport\", \"longitude\": \"-86.684734\"}, {\"latitude\": \"40.447404\", \"name\": \"Northern Colorado Regional Airport\", \"longitude\": \"-105.011033\"}]",
							",earthRadius:3959.0",
							",distances:[555, 112, 1036, 1579]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"28.408999\", \"name\": \"Orlando International Airport\", \"longitude\": \"-81.310293\"}, {\"latitude\": \"35.919653\", \"name\": \"Rockwood Municipal Airport\", \"longitude\": \"-84.690601\"}, {\"latitude\": \"36.119447\", \"name\": \"Nashville International Airport\", \"longitude\": \"-86.684734\"}, {\"latitude\": \"40.447404\", \"name\": \"Northern Colorado Regional Airport\", \"longitude\": \"-105.011033\"}], \"earthRadius\": 3959.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "bginna-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-90.0\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"90.0\", \"name\": \"place2\", \"longitude\": \"0\"}, {\"latitude\": \"0.0\", \"name\": \"place3\", \"longitude\": \"90.0\"}, {\"latitude\": \"0.0\", \"name\": \"place4\", \"longitude\": \"-90.0\"}]",
							",earthRadius:6371.0",
							",distances:[20015, 10008, 20015, 10008]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-90.0\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"90.0\", \"name\": \"place2\", \"longitude\": \"0\"}, {\"latitude\": \"0.0\", \"name\": \"place3\", \"longitude\": \"90.0\"}, {\"latitude\": \"0.0\", \"name\": \"place4\", \"longitude\": \"-90.0\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "bjurenka-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-90\", \"name\": \"place1\", \"longitude\": \"45\"}, {\"latitude\": \"90\", \"name\": \"place2\", \"longitude\": \"-135\"}, {\"latitude\": \"90\", \"name\": \"place2\", \"longitude\": \"-135\"}, {\"latitude\": \"-90\", \"name\": \"place1\", \"longitude\": \"45\"}]",
							",earthRadius:3959.0",
							",distances:[12438, 0, 12438, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-90\", \"name\": \"place1\", \"longitude\": \"45\"}, {\"latitude\": \"90\", \"name\": \"place2\", \"longitude\": \"-135\"}, {\"latitude\": \"90\", \"name\": \"place2\", \"longitude\": \"-135\"}, {\"latitude\": \"-90\", \"name\": \"place1\", \"longitude\": \"45\"}], \"earthRadius\": 3959.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "blosche-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"48.91\", \"name\": \"place1\", \"longitude\": \"-106.1\"}, {\"latitude\": \"35.9\", \"name\": \"place2\", \"longitude\": \"141.1\"}, {\"latitude\": \"57.9\", \"name\": \"place3\", \"longitude\": \"13.6\"}]",
							",earthRadius:550.0",
							",distances:[733, 734, 598]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"48.91\", \"name\": \"place1\", \"longitude\": \"-106.1\"}, {\"latitude\": \"35.9\", \"name\": \"place2\", \"longitude\": \"141.1\"}, {\"latitude\": \"57.9\", \"name\": \"place3\", \"longitude\": \"13.6\"}], \"earthRadius\": 550.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "bmbright-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[]",
							",earthRadius:6371.0",
							",distances:[]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "brockli-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {\r",
							"places:[{\"latitude\": \"90\", \"name\": \"Positive Bound\", \"longitude\": \"180\"}, {\"latitude\": \"-90\", \"name\": \"Negative Bound\", \"longitude\": \"-180\"}, {\"latitude\": \"0\", \"name\": \"Origin\", \"longitude\": \"0\"}, {\"latitude\": \"-40\", \"name\": \"Acute Angle\", \"longitude\": \"0\"}, {\"latitude\": \"-40\", \"name\": \"Repeat\", \"longitude\": \"0\"}, {\"latitude\": \"90\", \"name\": \"Start\", \"longitude\": \"180\"}]\r",
							",earthRadius:6371.0\r",
							",distances:[20015, 10008, 4448, 0, 14455, 0]\r",
							",requestType:\"distances\"}\r",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"90\", \"name\": \"Positive Bound\", \"longitude\": \"180\"}, {\"latitude\": \"-90\", \"name\": \"Negative Bound\", \"longitude\": \"-180\"}, {\"latitude\": \"0\", \"name\": \"Origin\", \"longitude\": \"0\"}, {\"latitude\": \"-40\", \"name\": \"Acute Angle\", \"longitude\": \"0\"}, {\"latitude\": \"-40\", \"name\": \"Repeat\", \"longitude\": \"0\"}, {\"latitude\": \"90\", \"name\": \"Start\", \"longitude\": \"180\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "capitalbird-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place2\", \"longitude\": \"180\"}, {\"latitude\": \"90\", \"name\": \"place3\", \"longitude\": \"0\"}]",
							",earthRadius:6371.0",
							",distances:[20015, 10008, 10008]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place2\", \"longitude\": \"180\"}, {\"latitude\": \"90\", \"name\": \"place3\", \"longitude\": \"0\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "ccluett-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40\", \"longitude\": \"40\"}, {\"latitude\": \"40\", \"longitude\": \"40\"}, {\"latitude\": \"40\", \"longitude\": \"40\"}, {\"latitude\": \"40\", \"longitude\": \"40\"}]",
							",earthRadius:6371",
							",distances:[0, 0, 0, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40\", \"longitude\": \"40\"}, {\"latitude\": \"40\", \"longitude\": \"40\"}, {\"latitude\": \"40\", \"longitude\": \"40\"}, {\"latitude\": \"40\", \"longitude\": \"40\"}], \"earthRadius\": 6371, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "cytoniv-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"Meiji Jingu\", \"latitude\": \"35.676305033874755\", \"longitude\": \"139.6994707152681\"}, {\"name\": \"Dakar\", \"latitude\": \"14.716500867141164\", \"longitude\": \"-17.468057124494095\"}, {\"name\": \"Isla Lenox\", \"latitude\": \"-55.281636644826\", \"longitude\": \"-66.91865439516093\"}]",
							",earthRadius:6371.0",
							",distances:[13918, 9053, 17041]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"Meiji Jingu\", \"latitude\": \"35.676305033874755\", \"longitude\": \"139.6994707152681\"}, {\"name\": \"Dakar\", \"latitude\": \"14.716500867141164\", \"longitude\": \"-17.468057124494095\"}, {\"name\": \"Isla Lenox\", \"latitude\": \"-55.281636644826\", \"longitude\": \"-66.91865439516093\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "dbutcher-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-90\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"90\", \"name\": \"place2\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place3\", \"longitude\": \"-180\"}, {\"latitude\": \"0\", \"name\": \"place4\", \"longitude\": \"180\"}]",
							",earthRadius:100000000.0",
							",distances:[314159265, 157079633, 0, 157079633]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-90\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"90\", \"name\": \"place2\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place3\", \"longitude\": \"-180\"}, {\"latitude\": \"0\", \"name\": \"place4\", \"longitude\": \"180\"}], \"earthRadius\": 100000000.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "dpohl-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"90.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"-90.0\", \"longitude\": \"0.0\"}]",
							",earthRadius:1.0",
							",distances:[2, 3, 2]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"90.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"-90.0\", \"longitude\": \"0.0\"}], \"earthRadius\": 1.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "dsmcc-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"90\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"longitude\": \"90\"}, {\"latitude\": \"0\", \"longitude\": \"-90\"}, {\"latitude\": \"-90\", \"longitude\": \"0\"}]",
							",earthRadius:3959",
							",distances:[6219, 12438, 6219, 12438]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"90\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"longitude\": \"90\"}, {\"latitude\": \"0\", \"longitude\": \"-90\"}, {\"latitude\": \"-90\", \"longitude\": \"0\"}], \"earthRadius\": 3959, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "eide1992-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"1\", \"longitude\": \"0\"}, {\"latitude\": \"2\", \"longitude\": \"0\"}, {\"latitude\": \"1\", \"longitude\": \"0\"}]",
							",earthRadius:6371.0",
							",distances:[111, 111, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"1\", \"longitude\": \"0\"}, {\"latitude\": \"2\", \"longitude\": \"0\"}, {\"latitude\": \"1\", \"longitude\": \"0\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "elita-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"Ella North Airport\", \"latitude\": \"31.92180801\", \"longitude\": \"48.87751713\"}, {\"name\": \"Rancho Sumidor Airport\", \"latitude\": \"-27.191944122314453\", \"longitude\": \"-49.831390380859375\"}, {\"name\": \"Daniel Airport\", \"latitude\": \"30.353200912475586\", \"longitude\": \"-91.28209686279297\"}]",
							",earthRadius:6378.0",
							",distances:[12340, 7776, 11930]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"Ella North Airport\", \"latitude\": \"31.92180801\", \"longitude\": \"48.87751713\"}, {\"name\": \"Rancho Sumidor Airport\", \"latitude\": \"-27.191944122314453\", \"longitude\": \"-49.831390380859375\"}, {\"name\": \"Daniel Airport\", \"latitude\": \"30.353200912475586\", \"longitude\": \"-91.28209686279297\"}], \"earthRadius\": 6378.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "esutko-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40.5737037\", \"name\": \"Fort Collins\", \"longitude\": \"-105.0836820\"}, {\"latitude\": \"39.9144457\", \"name\": \"Beijing\", \"longitude\": \"116.3909619\"}, {\"latitude\": \"-34.9011\", \"name\": \"Montevideo\", \"longitude\": \"-56.1645\"}]",
							",earthRadius:3959.0",
							",distances:[6295, 11902, 6071]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40.5737037\", \"name\": \"Fort Collins\", \"longitude\": \"-105.0836820\"}, {\"latitude\": \"39.9144457\", \"name\": \"Beijing\", \"longitude\": \"116.3909619\"}, {\"latitude\": \"-34.9011\", \"name\": \"Montevideo\", \"longitude\": \"-56.1645\"}], \"earthRadius\": 3959.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "etham-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40.6\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.6\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.6\", \"longitude\": \"-105.1\"}]",
							",earthRadius:6371.0",
							",distances:[0, 0, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40.6\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.6\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.6\", \"longitude\": \"-105.1\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "evrose54-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"90\", \"name\": \"place1\", \"longitude\": \"-180\"}, {\"latitude\": \"-90\", \"name\": \"place2\", \"longitude\": \"180\"}, {\"latitude\": \"0\", \"name\": \"place3\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place4\", \"longitude\": \"0\"}]",
							",earthRadius:6371",
							",distances:[20015, 10008, 0, 10008]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"90\", \"name\": \"place1\", \"longitude\": \"-180\"}, {\"latitude\": \"-90\", \"name\": \"place2\", \"longitude\": \"180\"}, {\"latitude\": \"0\", \"name\": \"place3\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place4\", \"longitude\": \"0\"}], \"earthRadius\": 6371, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "fargah1-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"\\u00d9\\u2026\\u00d9\\u0192\\u00d8\\u00a9\", \"latitude\": \"21.25\", \"longitude\": \"39.49\"}, {\"name\": \"Nothing happen here\", \"latitude\": \"39.54\", \"longitude\": \"116.23\"}, {\"name\": \"[object Object]\", \"latitude\": \"-33.9\", \"longitude\": \"151.2\"}]",
							",earthRadius:6371.0",
							",distances:[7416, 8923, 13258]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"\\u00d9\\u2026\\u00d9\\u0192\\u00d8\\u00a9\", \"latitude\": \"21.25\", \"longitude\": \"39.49\"}, {\"name\": \"Nothing happen here\", \"latitude\": \"39.54\", \"longitude\": \"116.23\"}, {\"name\": \"[object Object]\", \"latitude\": \"-33.9\", \"longitude\": \"151.2\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "garretp-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0\", \"name\": \"Null Island\", \"longitude\": \"0\"}, {\"latitude\": \"90\", \"name\": \"North Pole\", \"longitude\": \"0\"}, {\"latitude\": \"-90\", \"name\": \"South Pole\", \"longitude\": \"0\"}]",
							",earthRadius:3959.0",
							",distances:[6219, 12438, 6219]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0\", \"name\": \"Null Island\", \"longitude\": \"0\"}, {\"latitude\": \"90\", \"name\": \"North Pole\", \"longitude\": \"0\"}, {\"latitude\": \"-90\", \"name\": \"South Pole\", \"longitude\": \"0\"}], \"earthRadius\": 3959.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "gmyzer-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-40.9999999\", \"name\": \"place1\", \"longitude\": \"115.1151515\"}, {\"latitude\": \"40.9999999\", \"name\": \"place2\", \"longitude\": \"115.1151515\"}, {\"latitude\": \"-80.9999999\", \"name\": \"place3\", \"longitude\": \"10.8134567\"}]",
							",earthRadius:3959.0",
							",distances:[5666, 9164, 3577]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-40.9999999\", \"name\": \"place1\", \"longitude\": \"115.1151515\"}, {\"latitude\": \"40.9999999\", \"name\": \"place2\", \"longitude\": \"115.1151515\"}, {\"latitude\": \"-80.9999999\", \"name\": \"place3\", \"longitude\": \"10.8134567\"}], \"earthRadius\": 3959.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "grovee-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"32.1656\", \"name\": \"Georgia\", \"longitude\": \"-82.9001\"}, {\"latitude\": \"33.6409\", \"name\": \"Atlanta Airport\", \"longitude\": \"-84.4462\"}, {\"latitude\": \"42.3154\", \"name\": \"Georgia\", \"longitude\": \"43.3569\"}]",
							",earthRadius:6371.0",
							",distances:[219, 10036, 10083]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"32.1656\", \"name\": \"Georgia\", \"longitude\": \"-82.9001\"}, {\"latitude\": \"33.6409\", \"name\": \"Atlanta Airport\", \"longitude\": \"-84.4462\"}, {\"latitude\": \"42.3154\", \"name\": \"Georgia\", \"longitude\": \"43.3569\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "guz339-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"Eagles Landing Heliport\", \"latitude\": \"35.92250061035156\", \"longitude\": \"-83.57939910888672\"}, {\"name\": \"Nest of Eagles Airport\", \"latitude\": \"45.83549880981445\", \"longitude\": \"-91.80269622802734\"}, {\"name\": \"Eagles Ridge Airport\", \"latitude\": \"30.353200912475586\", \"longitude\": \"-89.913101\"}]",
							",earthRadius:6378.0",
							",distances:[1301, 1731, 856]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"Eagles Landing Heliport\", \"latitude\": \"35.92250061035156\", \"longitude\": \"-83.57939910888672\"}, {\"name\": \"Nest of Eagles Airport\", \"latitude\": \"45.83549880981445\", \"longitude\": \"-91.80269622802734\"}, {\"name\": \"Eagles Ridge Airport\", \"latitude\": \"30.353200912475586\", \"longitude\": \"-89.913101\"}], \"earthRadius\": 6378.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "holmesaw-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"22.09\", \"name\": \"Kauai\", \"longitude\": \"-159.53\"}, {\"latitude\": \"29.979\", \"name\": \"Great Pyramid of Giza\", \"longitude\": \"31.134\"}, {\"latitude\": \"32.5355\", \"name\": \"Hanging Gardens of Babylon\", \"longitude\": \"44.4275\"}, {\"latitude\": \"-56.538\", \"name\": \"Southernmost point of South America\", \"longitude\": \"-68.719\"}]",
							",earthRadius:1395035000",
							",distances:[3090505478, 283392003, 3144629171, 2647137083]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"22.09\", \"name\": \"Kauai\", \"longitude\": \"-159.53\"}, {\"latitude\": \"29.979\", \"name\": \"Great Pyramid of Giza\", \"longitude\": \"31.134\"}, {\"latitude\": \"32.5355\", \"name\": \"Hanging Gardens of Babylon\", \"longitude\": \"44.4275\"}, {\"latitude\": \"-56.538\", \"name\": \"Southernmost point of South America\", \"longitude\": \"-68.719\"}], \"earthRadius\": 1395035000, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "iliyan-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"50\", \"name\": \"Kaztal District, West Kazakhstan Region, 090700, Kazakhstan\", \"longitude\": \"50\"}, {\"latitude\": \"50\", \"name\": \"Unknown\", \"longitude\": \"-50\"}, {\"latitude\": \"-50\", \"name\": \"Unknown\", \"longitude\": \"-50\"}, {\"latitude\": \"-50\", \"name\": \"Unknown\", \"longitude\": \"50\"}]",
							",earthRadius:6371",
							",distances:[6560, 11119, 6560, 11119]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"50\", \"name\": \"Kaztal District, West Kazakhstan Region, 090700, Kazakhstan\", \"longitude\": \"50\"}, {\"latitude\": \"50\", \"name\": \"Unknown\", \"longitude\": \"-50\"}, {\"latitude\": \"-50\", \"name\": \"Unknown\", \"longitude\": \"-50\"}, {\"latitude\": \"-50\", \"name\": \"Unknown\", \"longitude\": \"50\"}], \"earthRadius\": 6371, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "jacc-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40.00000\", \"name\": \"place1\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.00001\", \"name\": \"place2\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.00002\", \"name\": \"place2\", \"longitude\": \"-105.1\"}]",
							",earthRadius:6371.0",
							",distances:[0, 0, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40.00000\", \"name\": \"place1\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.00001\", \"name\": \"place2\", \"longitude\": \"-105.1\"}, {\"latitude\": \"40.00002\", \"name\": \"place2\", \"longitude\": \"-105.1\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "jcbradle-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-64\", \"name\": \"my house\", \"longitude\": \"180\"}, {\"latitude\": \"-64\", \"name\": \"my house again\", \"longitude\": \"-180\"}, {\"latitude\": \"64\", \"name\": \"my mom's house\", \"longitude\": \"0\"}]",
							",earthRadius:100000.0",
							",distances:[0, 314159, 314159]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-64\", \"name\": \"my house\", \"longitude\": \"180\"}, {\"latitude\": \"-64\", \"name\": \"my house again\", \"longitude\": \"-180\"}, {\"latitude\": \"64\", \"name\": \"my mom's house\", \"longitude\": \"0\"}], \"earthRadius\": 100000.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "jmismas-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-33\", \"name\": \"place1\", \"longitude\": \"151\"}, {\"latitude\": \"-57\", \"name\": \"place2\", \"longitude\": \"175\"}, {\"latitude\": \"40\", \"name\": \"place3\", \"longitude\": \"-70\"}]",
							",earthRadius:1.0",
							",distances:[1, 2, 3]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-33\", \"name\": \"place1\", \"longitude\": \"151\"}, {\"latitude\": \"-57\", \"name\": \"place2\", \"longitude\": \"175\"}, {\"latitude\": \"40\", \"name\": \"place3\", \"longitude\": \"-70\"}], \"earthRadius\": 1.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "kaiyan-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40.583100021347995\", \"name\": \"420\", \"longitude\": \"-105.07083696972335\"}, {\"latitude\": \"40.573705567796324\", \"name\": \"1041\", \"longitude\": \"-105.1229369237095\"}, {\"latitude\": \"40.5712919942299\", \"name\": \"1274\", \"longitude\": \"-105.06663118194007\"}]",
							",earthRadius:6371.0",
							",distances:[5, 5, 1]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40.583100021347995\", \"name\": \"420\", \"longitude\": \"-105.07083696972335\"}, {\"latitude\": \"40.573705567796324\", \"name\": \"1041\", \"longitude\": \"-105.1229369237095\"}, {\"latitude\": \"40.5712919942299\", \"name\": \"1274\", \"longitude\": \"-105.06663118194007\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "kfinger-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-33.856\", \"name\": \"place1\", \"longitude\": \"-151.215\"}, {\"latitude\": \"35.685\", \"name\": \"place2\", \"longitude\": \"139.759\"}, {\"latitude\": \"41.019\", \"name\": \"place3\", \"longitude\": \"28.949\"}, {\"latitude\": \"27.988\", \"name\": \"place4\", \"longitude\": \"86.925\"}]",
							",earthRadius:637100000.0",
							",distances:[1054038763, 895068984, 540423308, 1450317629]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-33.856\", \"name\": \"place1\", \"longitude\": \"-151.215\"}, {\"latitude\": \"35.685\", \"name\": \"place2\", \"longitude\": \"139.759\"}, {\"latitude\": \"41.019\", \"name\": \"place3\", \"longitude\": \"28.949\"}, {\"latitude\": \"27.988\", \"name\": \"place4\", \"longitude\": \"86.925\"}], \"earthRadius\": 637100000.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "lgr9611-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"-90.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"90.0\", \"longitude\": \"0.0\"}]",
							",earthRadius:10.0",
							",distances:[16, 31, 16]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"-90.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"90.0\", \"longitude\": \"0.0\"}], \"earthRadius\": 10.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "lmkerr-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"36.53\", \"name\": \"Sneedville Tennessee\", \"longitude\": \"-83.20\"}, {\"latitude\": \"35.50\", \"name\": \"Tokyo Japan\", \"longitude\": \"139.76\"}, {\"latitude\": \"-34.61\", \"name\": \"Buenos Aires Argentina\", \"longitude\": \"-58.43\"}]",
							",earthRadius:6371.0",
							",distances:[10858, 18359, 8316]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"36.53\", \"name\": \"Sneedville Tennessee\", \"longitude\": \"-83.20\"}, {\"latitude\": \"35.50\", \"name\": \"Tokyo Japan\", \"longitude\": \"139.76\"}, {\"latitude\": \"-34.61\", \"name\": \"Buenos Aires Argentina\", \"longitude\": \"-58.43\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "lxh-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"Ocean Reef Club Airport\", \"latitude\": \"25.325399398804\", \"longitude\": \"-80.274803161621\"}, {\"name\": \"Doral Ocean Beach Resort Heliport\", \"latitude\": \"25.825700759887695\", \"longitude\": \"-80.12120056152344\"}, {\"name\": \"Ocean City Municipal Airport\", \"latitude\": \"39.26350021362305\", \"longitude\": \"-74.60749816894531\"}]",
							",earthRadius:6371.0",
							",distances:[58, 1580, 1638]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"Ocean Reef Club Airport\", \"latitude\": \"25.325399398804\", \"longitude\": \"-80.274803161621\"}, {\"name\": \"Doral Ocean Beach Resort Heliport\", \"latitude\": \"25.825700759887695\", \"longitude\": \"-80.12120056152344\"}, {\"name\": \"Ocean City Municipal Airport\", \"latitude\": \"39.26350021362305\", \"longitude\": \"-74.60749816894531\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "maxbaron-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"County Road 84, Weld County, Colorado, United States\", \"latitude\": \"40.59251424159133\", \"longitude\": \"-104.91874226336438\"}, {\"name\": \"Larimer County, Colorado, United States\", \"latitude\": \"40.557090415442794\", \"longitude\": \"-105.27579804705202\"}, {\"name\": \"Albany County, Wyoming, United States\", \"latitude\": \"41.019635662673075\", \"longitude\": \"-105.38083386541618\"}]",
							",earthRadius:6371.0",
							",distances:[30, 52, 61]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"County Road 84, Weld County, Colorado, United States\", \"latitude\": \"40.59251424159133\", \"longitude\": \"-104.91874226336438\"}, {\"name\": \"Larimer County, Colorado, United States\", \"latitude\": \"40.557090415442794\", \"longitude\": \"-105.27579804705202\"}, {\"name\": \"Albany County, Wyoming, United States\", \"latitude\": \"41.019635662673075\", \"longitude\": \"-105.38083386541618\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "mdees15-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0\", \"name\": \"A\", \"longitude\": \"180\"}, {\"latitude\": \"0\", \"name\": \"B\", \"longitude\": \"90\"}, {\"latitude\": \"0\", \"name\": \"C\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"D\", \"longitude\": \"-90\"}, {\"latitude\": \"0\", \"name\": \"E\", \"longitude\": \"-180\"}, {\"latitude\": \"0\", \"name\": \"A\", \"longitude\": \"180\"}]",
							",earthRadius:3959.0",
							",distances:[6219, 6219, 6219, 6219, 0, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0\", \"name\": \"A\", \"longitude\": \"180\"}, {\"latitude\": \"0\", \"name\": \"B\", \"longitude\": \"90\"}, {\"latitude\": \"0\", \"name\": \"C\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"D\", \"longitude\": \"-90\"}, {\"latitude\": \"0\", \"name\": \"E\", \"longitude\": \"-180\"}, {\"latitude\": \"0\", \"name\": \"A\", \"longitude\": \"180\"}], \"earthRadius\": 3959.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "mlopez18-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"33.41\", \"name\": \"place 1\", \"longitude\": \"-78.05\"}, {\"latitude\": \"-85.18\", \"name\": \"place 2 \", \"longitude\": \"-25.23\"}, {\"latitude\": \"-43.55\", \"name\": \"place 3\", \"longitude\": \"10.55\"}]",
							",earthRadius:6969.0",
							",distances:[14647, 5183, 13548]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"33.41\", \"name\": \"place 1\", \"longitude\": \"-78.05\"}, {\"latitude\": \"-85.18\", \"name\": \"place 2 \", \"longitude\": \"-25.23\"}, {\"latitude\": \"-43.55\", \"name\": \"place 3\", \"longitude\": \"10.55\"}], \"earthRadius\": 6969.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "nws-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"Ronald Reagan Washington National Airport\", \"latitude\": \"38.852100\", \"longitude\": \"-77.037697\"}, {\"name\": \"Greeley\\u00e2\\u20ac\\u201cWeld County Airport\", \"latitude\": \"40.437417\", \"longitude\": \"-104.633222\"}, {\"name\": \"Los Angeles International Airport\", \"latitude\": \"33.942501\", \"longitude\": \"-118.407997\"}]",
							",earthRadius:6371.0",
							",distances:[2360, 1415, 3711]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"Ronald Reagan Washington National Airport\", \"latitude\": \"38.852100\", \"longitude\": \"-77.037697\"}, {\"name\": \"Greeley\\u00e2\\u20ac\\u201cWeld County Airport\", \"latitude\": \"40.437417\", \"longitude\": \"-104.633222\"}, {\"name\": \"Los Angeles International Airport\", \"latitude\": \"33.942501\", \"longitude\": \"-118.407997\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "olivia4-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40\", \"longitude\": \"-105\"}, {\"latitude\": \"40\", \"longitude\": \"-105\"}, {\"latitude\": \"-39\", \"longitude\": \"93\"}, {\"latitude\": \"39\", \"longitude\": \"-93\"}]",
							",earthRadius:5000.0",
							",distances:[0, 14495, 15301, 812]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40\", \"longitude\": \"-105\"}, {\"latitude\": \"40\", \"longitude\": \"-105\"}, {\"latitude\": \"-39\", \"longitude\": \"93\"}, {\"latitude\": \"39\", \"longitude\": \"-93\"}], \"earthRadius\": 5000.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "pjackim-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-1\", \"longitude\": \"-1\"}, {\"latitude\": \"0\", \"longitude\": \"0\"}, {\"latitude\": \"-0\", \"longitude\": \"-0\"}, {\"latitude\": \"-1\", \"longitude\": \"-1\"}]",
							",earthRadius:3959",
							",distances:[98, 0, 98, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-1\", \"longitude\": \"-1\"}, {\"latitude\": \"0\", \"longitude\": \"0\"}, {\"latitude\": \"-0\", \"longitude\": \"-0\"}, {\"latitude\": \"-1\", \"longitude\": \"-1\"}], \"earthRadius\": 3959, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "pritche-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"CSU Oval\", \"latitude\": \"40.57636616247881\", \"longitude\": \"-105.08074272559294\"}, {\"name\": \"Coors Field\", \"latitude\": \"39.75635996568721\", \"longitude\": \"-104.99418529200517\"}, {\"name\": \"Empower Field at Mile High\", \"latitude\": \"39.74429125277623\", \"longitude\": \"-105.02013873059595\"}]",
							",earthRadius:3958.756",
							",distances:[57, 2, 58]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"CSU Oval\", \"latitude\": \"40.57636616247881\", \"longitude\": \"-105.08074272559294\"}, {\"name\": \"Coors Field\", \"latitude\": \"39.75635996568721\", \"longitude\": \"-104.99418529200517\"}, {\"name\": \"Empower Field at Mile High\", \"latitude\": \"39.74429125277623\", \"longitude\": \"-105.02013873059595\"}], \"earthRadius\": 3958.756, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "ruzuzu-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"25\", \"name\": \"place1\", \"longitude\": \"120\"}, {\"latitude\": \"25\", \"name\": \"place2\", \"longitude\": \"100\"}, {\"latitude\": \"25\", \"name\": \"place3\", \"longitude\": \"65\"}]",
							",earthRadius:6000.0",
							",distances:[1896, 3312, 5181]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"25\", \"name\": \"place1\", \"longitude\": \"120\"}, {\"latitude\": \"25\", \"name\": \"place2\", \"longitude\": \"100\"}, {\"latitude\": \"25\", \"name\": \"place3\", \"longitude\": \"65\"}], \"earthRadius\": 6000.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "ryost-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"0.0\", \"longitude\": \"60.0\"}, {\"latitude\": \"0.0\", \"longitude\": \"180.0\"}, {\"latitude\": \"0.0\", \"longitude\": \"-60.0\"}]",
							",earthRadius:6371.0",
							",distances:[6672, 13343, 13343, 6672]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0.0\", \"longitude\": \"0.0\"}, {\"latitude\": \"0.0\", \"longitude\": \"60.0\"}, {\"latitude\": \"0.0\", \"longitude\": \"180.0\"}, {\"latitude\": \"0.0\", \"longitude\": \"-60.0\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "ryterski-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"name\": \"place1\", \"latitude\": \"0\", \"longitude\": \"0\"}, {\"name\": \"place2\", \"latitude\": \"0\", \"longitude\": \"0\"}, {\"name\": \"place3\", \"latitude\": \"0\", \"longitude\": \"0\"}]",
							",earthRadius:6371.0",
							",distances:[0, 0, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"name\": \"place1\", \"latitude\": \"0\", \"longitude\": \"0\"}, {\"name\": \"place2\", \"latitude\": \"0\", \"longitude\": \"0\"}, {\"name\": \"place3\", \"latitude\": \"0\", \"longitude\": \"0\"}], \"earthRadius\": 6371.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "sgreyson-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place2\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place3\", \"longitude\": \"0\"}]",
							",earthRadius:6371",
							",distances:[0, 0, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0\", \"name\": \"place1\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place2\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"name\": \"place3\", \"longitude\": \"0\"}], \"earthRadius\": 6371, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "sonudilp-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"40.19\", \"name\": \"Denver Artcc Heliport\", \"longitude\": \"-105.13\"}, {\"latitude\": \"40.59\", \"name\": \"Fort Collins Downtown Airport\", \"longitude\": \"-105.04\"}, {\"latitude\": \"33.03\", \"name\": \"Boon/Lovelace Airport\", \"longitude\": \"-94.38\"}]",
							",earthRadius:3958.8",
							",distances:[28, 787, 774]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"40.19\", \"name\": \"Denver Artcc Heliport\", \"longitude\": \"-105.13\"}, {\"latitude\": \"40.59\", \"name\": \"Fort Collins Downtown Airport\", \"longitude\": \"-105.04\"}, {\"latitude\": \"33.03\", \"name\": \"Boon/Lovelace Airport\", \"longitude\": \"-94.38\"}], \"earthRadius\": 3958.8, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "trostrn-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"0\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"longitude\": \"25\"}, {\"latitude\": \"0\", \"longitude\": \"50\"}]",
							",earthRadius:1.0",
							",distances:[0, 0, 1]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"0\", \"longitude\": \"0\"}, {\"latitude\": \"0\", \"longitude\": \"25\"}, {\"latitude\": \"0\", \"longitude\": \"50\"}], \"earthRadius\": 1.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "trothert-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"-0\", \"name\": \"Place 1\", \"longitude\": \"-180\"}, {\"latitude\": \"-89.9999\", \"name\": \"Place 2\", \"longitude\": \"-179.999\"}, {\"latitude\": \"-89.9999\", \"name\": \"Place 2\", \"longitude\": \"179.999\"}, {\"latitude\": \"0\", \"name\": \"Place 1\", \"longitude\": \"-179.999\"}]",
							",earthRadius:1000.0",
							",distances:[1571, 0, 1571, 0]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"-0\", \"name\": \"Place 1\", \"longitude\": \"-180\"}, {\"latitude\": \"-89.9999\", \"name\": \"Place 2\", \"longitude\": \"-179.999\"}, {\"latitude\": \"-89.9999\", \"name\": \"Place 2\", \"longitude\": \"179.999\"}, {\"latitude\": \"0\", \"name\": \"Place 1\", \"longitude\": \"-179.999\"}], \"earthRadius\": 1000.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "zachf-3.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expectedResult = {",
							"places:[{\"latitude\": \"37.66121979020485\", \"longitude\": \"-106.11239290272353\"}, {\"latitude\": \"37.661355830217126\", \"longitude\": \"-106.09402513538953\"}, {\"latitude\": \"37.6474104321919\", \"longitude\": \"-106.09385347401259\"}, {\"latitude\": \"37.64727436662812\", \"longitude\": \"-106.11187791859267\"}]",
							",earthRadius:19945.0",
							",distances:[5, 5, 5, 5]",
							",requestType:\"distances\"}",
							"pm.test(\"Places\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.eql(expectedResult.places);\r",
							"});\r",
							"pm.test(\"earthRadius\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.earthRadius).to.eql(expectedResult.earthRadius);\r",
							"});\r",
							"pm.test(\"distances\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distances).to.eql(expectedResult.distances);\r",
							"});\r",
							"pm.test(\"requestType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.eql(expectedResult.requestType);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"places\": [{\"latitude\": \"37.66121979020485\", \"longitude\": \"-106.11239290272353\"}, {\"latitude\": \"37.661355830217126\", \"longitude\": \"-106.09402513538953\"}, {\"latitude\": \"37.6474104321919\", \"longitude\": \"-106.09385347401259\"}, {\"latitude\": \"37.64727436662812\", \"longitude\": \"-106.11187791859267\"}], \"earthRadius\": 19945.0, \"requestType\": \"distances\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/distances",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		}
	]
}